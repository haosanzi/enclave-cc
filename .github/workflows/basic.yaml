name: basic build and unit tests
on:
  push:
    branches:
      - ci
  pull_request:
    branches:
      - main

jobs:

  # shim basic test
  shim:
    name: shim basic test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    strategy:
      matrix:
        os: [ubuntu-20.04]
        go-version: [1.17.x, 1.18.x, 1.19.x]

    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - uses: actions/checkout@v3

      - name: Run build
        run: |
          make binaries
        working-directory: src/shim

      - name: Run unit test
        run: |
          go test -v ./...
        working-directory: src/shim

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.50.1
          args: -v --timeout 5m
          working-directory: 'src/shim'

  # enclave-agent basic test
  enclave-agent:
    name: enclave-agent basic test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        rust: [stable]

    steps:
      - name: Code checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Install Rust toolchain (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - name: Install rats-tls
        run: |
          git clone https://github.com/inclavare-containers/rats-tls.git && \
          cd rats-tls && git checkout 5de6fc308f2a18f4105429451c85e6173b42ab9d && \
          cmake -DRATS_TLS_BUILD_MODE="occlum" -DBUILD_SAMPLES=on -H. -Bbuild && \
          make -C build install

      - name: Build and install
        run: |
          make && make install
        working-directory: src/enclave-agent

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          working-directory: src/enclave-agent

      - name: Run cargo fmt check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
          working-directory: src/enclave-agent

      - name: Run rust lint check
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          # We are getting error in generated code due to derive_partial_eq_without_eq check, so ignore it for now
          # args: --all-targets -- -D warnings -A clippy::derive_partial_eq_without_eq
          args: --all-targets -- -D warnings
          working-directory: src/enclave-agent
